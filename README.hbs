# bigint-secrets 

Secure random numbers and provably prime (Miller-Rabin primality test) generation/testing using native JS (stage 3) implementation of BigInt.

_The operations supported on BigInts are not constant time. BigInt is therefore **[unsuitable for use in cryptography](https://www.chosenplaintext.ca/articles/beginners-guide-constant-time-cryptography.html)**_

Many platforms provide native support for cryptography, such as [webcrypto](https://w3c.github.io/webcrypto/Overview.html) or [node crypto](https://nodejs.org/dist/latest/docs/api/crypto.html).

## Usage

```javascript
const secrets = require('bigingt-secrets');

// Generation of a probably prime of 2048 bits
const prime = await secrets.prime(2048);

// Testing if a prime is a probably prime (Miller-Ravin)
if ( secrets.isProbablyPrime(prime) )
    return true;

// Get a cryptographically secure random number of between 1 and 2**256 bits.
const rnd = secrets.randBetween(2**256);
```

{{>main}}

* * *